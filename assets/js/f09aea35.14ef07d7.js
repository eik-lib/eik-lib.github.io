"use strict";(self.webpackChunkeik=self.webpackChunkeik||[]).push([[445],{4918:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>t,toc:()=>l});var n=s(4848),a=s(8453);const i={id:"server_file_structure",title:"Eik server - File structure",sidebar_label:"File structure"},o=void 0,t={id:"server_file_structure",title:"Eik server - File structure",description:"The EIK server stores files in the following structure:",source:"@site/docs/server_file_structure.md",sourceDirName:".",slug:"/server_file_structure",permalink:"/docs/server_file_structure",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"server_file_structure",title:"Eik server - File structure",sidebar_label:"File structure"},sidebar:"mainSidebar",previous:{title:"REST API",permalink:"/docs/server_rest_api"},next:{title:"Metrics",permalink:"/docs/server_metrics"}},c={},l=[{value:"Packages",id:"packages",level:2},{value:"NPM Packages",id:"npm-packages",level:2},{value:"Import Maps",id:"import-maps",level:2},{value:"Aliases",id:"aliases",level:2}];function d(e){const r={code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.p,{children:"The EIK server stores files in the following structure:"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{className:"language-sh",children:":root\n\u2514\u2500\u2500 :org\n    \u251c\u2500\u2500 map\n    \u2502\xa0\xa0 \u2514\u2500\u2500 :name\n    \u2502\xa0\xa0     \u251c\u2500\u2500 :version.import-map.json\n    \u2502\xa0\xa0     \u251c\u2500\u2500 :major.alias.json\n    \u2502       \u2514\u2500\u2500 versions.json\n    \u251c\u2500\u2500 pkg\n    \u2502   \u2514\u2500\u2500 :name\n    \u2502       \u251c\u2500\u2500 :version\n    \u2502       \u2502\xa0\xa0 \u251c\u2500\u2500 *\n    \u2502       \u251c\u2500\u2500 :version.package.json\n    \u2502       \u251c\u2500\u2500 :major.alias.json\n    \u2502       \u2514\u2500\u2500 versions.json\n    \u2514\u2500\u2500 npm\n        \u2514\u2500\u2500 :name\n            \u251c\u2500\u2500 :version\n            \u2502\xa0\xa0 \u251c\u2500\u2500 *\n            \u251c\u2500\u2500 :version.package.json\n            \u251c\u2500\u2500 :major.alias.json\n            \u2514\u2500\u2500 versions.json\n"})}),"\n",(0,n.jsx)(r.p,{children:"Parameters:"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:":root"})," is the root folder for everything."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:":org"})," is the name of an organisation."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:":name"})," is the name of a package."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:":version"})," is the full semver version of a package."]}),"\n",(0,n.jsxs)(r.li,{children:[(0,n.jsx)(r.code,{children:":major"})," is the major semver version of a full semver version of a package."]}),"\n"]}),"\n",(0,n.jsx)(r.h2,{id:"packages",children:"Packages"}),"\n",(0,n.jsxs)(r.p,{children:["Packages are stored under ",(0,n.jsx)(r.code,{children:"/:root/:org/pkg/:name/:version/"})," and the structure of a package is\narbitrary and untouched during upload by the service."]}),"\n",(0,n.jsxs)(r.p,{children:["The file structure of a package is stored in a package file at ",(0,n.jsx)(r.code,{children:"/:root/:org/pkg/:name/:version.package.json"}),"."]}),"\n",(0,n.jsx)(r.h2,{id:"npm-packages",children:"NPM Packages"}),"\n",(0,n.jsx)(r.p,{children:'NPM packages are packages from the NPM registry that are then published to Eik as a "copy". Packages from\nthe NPM registry are published under this namespace to avoid name collision with other packages.'}),"\n",(0,n.jsxs)(r.p,{children:["NPM packages are stored under ",(0,n.jsx)(r.code,{children:"/:root/:org/npm/:name/:version/"})," and the structure of a package is\narbitrary and is not changed during upload by the service."]}),"\n",(0,n.jsxs)(r.p,{children:["The file structure of an NPM package is stored in a package meta file at ",(0,n.jsx)(r.code,{children:"/:root/:org/pkg/:name/:version.package.json"}),"."]}),"\n",(0,n.jsx)(r.h2,{id:"import-maps",children:"Import Maps"}),"\n",(0,n.jsxs)(r.p,{children:["Import maps are stored under ",(0,n.jsx)(r.code,{children:"/:root/:org/map/:name/:version.import-map.json"}),". The filename of\nimport maps is strict and conforms to the version number it's given with a ",(0,n.jsx)(r.code,{children:".json"})," extension."]}),"\n",(0,n.jsx)(r.p,{children:"The filename of import maps prior to uploading to the service can be anything. The service will\nconvert the file name according to the parameters given when uploading it."}),"\n",(0,n.jsx)(r.h2,{id:"aliases",children:"Aliases"}),"\n",(0,n.jsx)(r.p,{children:"Packages, NPM packages and import map versions can be aliased. An alias is a semver major version of a\nfull semver version and is a way to map a major version to a given full semver version of a\npackage or import map."}),"\n",(0,n.jsx)(r.p,{children:"This alias mapping is stored alongside the version of a package or import map version:"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsxs)(r.li,{children:["Package alias path: ",(0,n.jsx)(r.code,{children:"/:root/:org/pkg/:name/:major.alias.json"})]}),"\n",(0,n.jsxs)(r.li,{children:["NPM package alias path: ",(0,n.jsx)(r.code,{children:"/:root/:org/npm/:name/:major.alias.json"})]}),"\n",(0,n.jsxs)(r.li,{children:["Import map alias path: ",(0,n.jsx)(r.code,{children:"/:root/:org/map/:name/:major.alias.json"})]}),"\n"]})]})}function p(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,r,s)=>{s.d(r,{R:()=>o,x:()=>t});var n=s(6540);const a={},i=n.createContext(a);function o(e){const r=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function t(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(i.Provider,{value:r},e.children)}}}]);