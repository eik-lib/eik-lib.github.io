"use strict";(self.webpackChunkeik=self.webpackChunkeik||[]).push([[2789],{3905:function(e,r,n){n.d(r,{Zo:function(){return u},kt:function(){return f}});var t=n(7294);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function i(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?i(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function s(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},i=Object.keys(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(t=0;t<i.length;t++)n=i[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=t.createContext({}),p=function(e){var r=t.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):o(o({},r),e)),n},u=function(e){var r=p(e.components);return t.createElement(l.Provider,{value:r},e.children)},c={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},m=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=p(n),f=a,k=m["".concat(l,".").concat(f)]||m[f]||c[f]||i;return n?t.createElement(k,o(o({ref:r},u),{},{components:n})):t.createElement(k,o({ref:r},u))}));function f(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4538:function(e,r,n){n.r(r),n.d(r,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return p},assets:function(){return u},toc:function(){return c},default:function(){return f}});var t=n(7462),a=n(3366),i=(n(7294),n(3905)),o=["components"],s={id:"server_file_structure",title:"Eik server - File structure",sidebar_label:"File structure"},l=void 0,p={unversionedId:"server_file_structure",id:"server_file_structure",title:"Eik server - File structure",description:"The EIK server stores files in the following structure:",source:"@site/docs/server_file_structure.md",sourceDirName:".",slug:"/server_file_structure",permalink:"/docs/server_file_structure",tags:[],version:"current",frontMatter:{id:"server_file_structure",title:"Eik server - File structure",sidebar_label:"File structure"},sidebar:"mainSidebar",previous:{title:"REST API",permalink:"/docs/server_rest_api"},next:{title:"Metrics",permalink:"/docs/server_metrics"}},u={},c=[{value:"Packages",id:"packages",level:2},{value:"NPM Packages",id:"npm-packages",level:2},{value:"Import Maps",id:"import-maps",level:2},{value:"Aliases",id:"aliases",level:2}],m={toc:c};function f(e){var r=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,t.Z)({},m,n,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"The EIK server stores files in the following structure:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},":root\n\u2514\u2500\u2500 :org\n    \u251c\u2500\u2500 map\n    \u2502\xa0\xa0 \u2514\u2500\u2500 :name\n    \u2502\xa0\xa0     \u251c\u2500\u2500 :version.import-map.json\n    \u2502\xa0\xa0     \u251c\u2500\u2500 :major.alias.json\n    \u2502       \u2514\u2500\u2500 versions.json\n    \u251c\u2500\u2500 pkg\n    \u2502   \u2514\u2500\u2500 :name\n    \u2502       \u251c\u2500\u2500 :version\n    \u2502       \u2502\xa0\xa0 \u251c\u2500\u2500 *\n    \u2502       \u251c\u2500\u2500 :version.package.json\n    \u2502       \u251c\u2500\u2500 :major.alias.json\n    \u2502       \u2514\u2500\u2500 versions.json\n    \u2514\u2500\u2500 npm\n        \u2514\u2500\u2500 :name\n            \u251c\u2500\u2500 :version\n            \u2502\xa0\xa0 \u251c\u2500\u2500 *\n            \u251c\u2500\u2500 :version.package.json\n            \u251c\u2500\u2500 :major.alias.json\n            \u2514\u2500\u2500 versions.json\n")),(0,i.kt)("p",null,"Parameters:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},":root")," is the root folder for everything."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},":org")," is the name of an organisation."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},":name")," is the name of a package."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},":version")," is the full semver version of a package."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},":major")," is the major semver version of a full semver version of a package.")),(0,i.kt)("h2",{id:"packages"},"Packages"),(0,i.kt)("p",null,"Packages are stored under ",(0,i.kt)("inlineCode",{parentName:"p"},"/:root/:org/pkg/:name/:version/")," and the structure of a package is\narbitrary and untouched during upload by the service."),(0,i.kt)("p",null,"The file structure of a package is stored in a package file at ",(0,i.kt)("inlineCode",{parentName:"p"},"/:root/:org/pkg/:name/:version.package.json"),"."),(0,i.kt)("h2",{id:"npm-packages"},"NPM Packages"),(0,i.kt)("p",null,'NPM packages are packages from the NPM registry that are then published to Eik as a "copy". Packages from\nthe NPM registry are published under this namespace to avoid name collision with other packages.'),(0,i.kt)("p",null,"NPM packages are stored under ",(0,i.kt)("inlineCode",{parentName:"p"},"/:root/:org/npm/:name/:version/")," and the structure of a package is\narbitrary and is not changed during upload by the service."),(0,i.kt)("p",null,"The file structure of an NPM package is stored in a package meta file at ",(0,i.kt)("inlineCode",{parentName:"p"},"/:root/:org/pkg/:name/:version.package.json"),"."),(0,i.kt)("h2",{id:"import-maps"},"Import Maps"),(0,i.kt)("p",null,"Import maps are stored under ",(0,i.kt)("inlineCode",{parentName:"p"},"/:root/:org/map/:name/:version.import-map.json"),". The filename of\nimport maps is strict and conforms to the version number it's given with a ",(0,i.kt)("inlineCode",{parentName:"p"},".json")," extension."),(0,i.kt)("p",null,"The filename of import maps prior to uploading to the service can be anything. The service will\nconvert the file name according to the parameters given when uploading it."),(0,i.kt)("h2",{id:"aliases"},"Aliases"),(0,i.kt)("p",null,"Packages, NPM packages and import map versions can be aliased. An alias is a semver major version of a\nfull semver version and is a way to map a major version to a given full semver version of a\npackage or import map."),(0,i.kt)("p",null,"This alias mapping is stored alongside the version of a package or import map version:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Package alias path: ",(0,i.kt)("inlineCode",{parentName:"li"},"/:root/:org/pkg/:name/:major.alias.json")),(0,i.kt)("li",{parentName:"ul"},"NPM package alias path: ",(0,i.kt)("inlineCode",{parentName:"li"},"/:root/:org/npm/:name/:major.alias.json")),(0,i.kt)("li",{parentName:"ul"},"Import map alias path: ",(0,i.kt)("inlineCode",{parentName:"li"},"/:root/:org/map/:name/:major.alias.json"))))}f.isMDXComponent=!0}}]);