"use strict";(self.webpackChunkeik=self.webpackChunkeik||[]).push([[980],{5680:(e,a,n)=>{n.d(a,{xA:()=>m,yg:()=>d});var l=n(6540);function t(e,a,n){return a in e?Object.defineProperty(e,a,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[a]=n,e}function i(e,a){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);a&&(l=l.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),n.push.apply(n,l)}return n}function r(e){for(var a=1;a<arguments.length;a++){var n=null!=arguments[a]?arguments[a]:{};a%2?i(Object(n),!0).forEach((function(a){t(e,a,n[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(n,a))}))}return e}function p(e,a){if(null==e)return{};var n,l,t=function(e,a){if(null==e)return{};var n,l,t={},i=Object.keys(e);for(l=0;l<i.length;l++)n=i[l],a.indexOf(n)>=0||(t[n]=e[n]);return t}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(l=0;l<i.length;l++)n=i[l],a.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(t[n]=e[n])}return t}var g=l.createContext({}),o=function(e){var a=l.useContext(g),n=a;return e&&(n="function"==typeof e?e(a):r(r({},a),e)),n},m=function(e){var a=o(e.components);return l.createElement(g.Provider,{value:a},e.children)},s="mdxType",y={inlineCode:"code",wrapper:function(e){var a=e.children;return l.createElement(l.Fragment,{},a)}},u=l.forwardRef((function(e,a){var n=e.components,t=e.mdxType,i=e.originalType,g=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),s=o(n),u=t,d=s["".concat(g,".").concat(u)]||s[u]||y[u]||i;return n?l.createElement(d,r(r({ref:a},m),{},{components:n})):l.createElement(d,r({ref:a},m))}));function d(e,a){var n=arguments,t=a&&a.mdxType;if("string"==typeof e||t){var i=n.length,r=new Array(i);r[0]=u;var p={};for(var g in a)hasOwnProperty.call(a,g)&&(p[g]=a[g]);p.originalType=e,p[s]="string"==typeof e?e:t,r[1]=p;for(var o=2;o<i;o++)r[o]=n[o];return l.createElement.apply(null,r)}return l.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3531:(e,a,n)=>{n.r(a),n.d(a,{assets:()=>g,contentTitle:()=>r,default:()=>y,frontMatter:()=>i,metadata:()=>p,toc:()=>o});var l=n(8168),t=(n(6540),n(5680));const i={id:"server_rest_api",title:"Eik server - REST API",sidebar_label:"REST API"},r=void 0,p={unversionedId:"server_rest_api",id:"server_rest_api",title:"Eik server - REST API",description:"The EIK server has the following REST API:",source:"@site/docs/server_rest_api.md",sourceDirName:".",slug:"/server_rest_api",permalink:"/docs/server_rest_api",draft:!1,tags:[],version:"current",frontMatter:{id:"server_rest_api",title:"Eik server - REST API",sidebar_label:"REST API"},sidebar:"mainSidebar",previous:{title:"Sink",permalink:"/docs/server_sink"},next:{title:"File structure",permalink:"/docs/server_file_structure"}},g={},o=[{value:"Authentication",id:"authentication",level:2},{value:"Endpoint Summary Table",id:"endpoint-summary-table",level:3},{value:"Login",id:"login",level:3},{value:"Packages",id:"packages",level:2},{value:"Endpoint Summary Table",id:"endpoint-summary-table-1",level:3},{value:"Public Package URL",id:"public-package-url",level:3},{value:"Upload a package",id:"upload-a-package",level:3},{value:"Latest Package versions",id:"latest-package-versions",level:3},{value:"Package version overview",id:"package-version-overview",level:3},{value:"NPM Packages",id:"npm-packages",level:2},{value:"Endpoint Summary Table",id:"endpoint-summary-table-2",level:3},{value:"Public NPM Package URL",id:"public-npm-package-url",level:3},{value:"Upload a NPM Package",id:"upload-a-npm-package",level:3},{value:"Latest NPM Package versions",id:"latest-npm-package-versions",level:3},{value:"NPM Package version overview",id:"npm-package-version-overview",level:3},{value:"Import Maps",id:"import-maps",level:2},{value:"Endpoint Summary Table",id:"endpoint-summary-table-3",level:3},{value:"Public Import Maps URL",id:"public-import-maps-url",level:3},{value:"Upload an Import Map",id:"upload-an-import-map",level:3},{value:"Latest Import Map versions",id:"latest-import-map-versions",level:3},{value:"Aliases",id:"aliases",level:2},{value:"Endpoint Summary Table",id:"endpoint-summary-table-4",level:3},{value:"Public Alias URL",id:"public-alias-url",level:3},{value:"Create Alias",id:"create-alias",level:3},{value:"Update Alias",id:"update-alias",level:3},{value:"Delete Alias",id:"delete-alias",level:3}],m={toc:o},s="wrapper";function y(e){let{components:a,...n}=e;return(0,t.yg)(s,(0,l.A)({},m,n,{components:a,mdxType:"MDXLayout"}),(0,t.yg)("p",null,"The EIK server has the following REST API:"),(0,t.yg)("h2",{id:"authentication"},"Authentication"),(0,t.yg)("p",null,"Authentication is needed to execute multiple API calls in the REST API."),(0,t.yg)("h3",{id:"endpoint-summary-table"},"Endpoint Summary Table"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Name"),(0,t.yg)("th",{parentName:"tr",align:null},"Verb"),(0,t.yg)("th",{parentName:"tr",align:null},"Endpoint"),(0,t.yg)("th",{parentName:"tr",align:null},"Form Fields"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#login"},"Login")),(0,t.yg)("td",{parentName:"tr",align:null},"POST"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"/auth/login")),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"key"))))),(0,t.yg)("h3",{id:"login"},"Login"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Method:")," ",(0,t.yg)("inlineCode",{parentName:"p"},"POST")),(0,t.yg)("p",null,"Logs a user in to the service."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"https://:assetServerUrl:port/auth/login\n")),(0,t.yg)("p",null,"Form parameters:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"key")," an authentication key")),(0,t.yg)("p",null,"Status codes:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"200")," if user is authorized"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"401")," if user is not authorized")),(0,t.yg)("p",null,"Success response: A jwt token"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-json"},'{\n    "token": "..."\n}\n')),(0,t.yg)("p",null,"Example:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"curl -X POST -i -F key=rfm940c3 http://localhost:4001/auth/login\n")),(0,t.yg)("h2",{id:"packages"},"Packages"),(0,t.yg)("p",null,"A packages is a set of files (javascript, css etc) that is intended to be referenced from an HTML document and\nloaded by a browser."),(0,t.yg)("p",null,"Packages are versioned and consist of one or more files. A package of a specific version is immutable."),(0,t.yg)("h3",{id:"endpoint-summary-table-1"},"Endpoint Summary Table"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Name"),(0,t.yg)("th",{parentName:"tr",align:null},"Verb"),(0,t.yg)("th",{parentName:"tr",align:null},"Endpoint"),(0,t.yg)("th",{parentName:"tr",align:null},"Form Fields"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#public-package-url"},"Public Package URL")),(0,t.yg)("td",{parentName:"tr",align:null},"GET"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"/pkg/:name/:version/:extras")),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#upload-a-package"},"Upload a Package")),(0,t.yg)("td",{parentName:"tr",align:null},"PUT"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"/pkg/:name/:version")),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"package"))))),(0,t.yg)("h3",{id:"public-package-url"},"Public Package URL"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Method:")," ",(0,t.yg)("inlineCode",{parentName:"p"},"GET")),(0,t.yg)("p",null,"Retrieves files from a package on the service."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"https://:assetServerUrl:port/pkg/:name/:version/:extras\n")),(0,t.yg)("p",null,"URL parameters:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":name")," is the name of the package. Validator: Comply with ",(0,t.yg)("a",{parentName:"li",href:"https://github.com/npm/validate-npm-package-name"},"npm package names"),"."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":version")," is the version of the package. Validator: Comply with ",(0,t.yg)("a",{parentName:"li",href:"https://semver.org/"},"semver validation regex"),"."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":extras")," whildcard pathname to any file in the package")),(0,t.yg)("p",null,"Status codes:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"200")," if file is successfully retrieved"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"404")," if file is not found")),(0,t.yg)("p",null,"Example:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"curl -X GET http://localhost:4001/pkg/fuzz/8.4.1/main/index.js\n")),(0,t.yg)("h3",{id:"upload-a-package"},"Upload a package"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Method:")," ",(0,t.yg)("inlineCode",{parentName:"p"},"PUT")),(0,t.yg)("p",null,"Puts a new package at the service."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"https://:assetServerUrl:port/pkg/:name/:version\n")),(0,t.yg)("p",null,"URL parameters:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":name")," is the name of the package. Validator: Comply with ",(0,t.yg)("a",{parentName:"li",href:"https://github.com/npm/validate-npm-package-name"},"npm package names"),"."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":version")," is the version of the package. Validator: Comply with ",(0,t.yg)("a",{parentName:"li",href:"https://semver.org/"},"semver validation regex"),".")),(0,t.yg)("p",null,"Form parameters:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"package")," a ",(0,t.yg)("inlineCode",{parentName:"li"},"tar")," or ",(0,t.yg)("inlineCode",{parentName:"li"},"tar.gz")," containing the files of the package")),(0,t.yg)("p",null,"HTTP headers:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"Authorization")," a jwt authorization bearer with the token retrieved from a successful ",(0,t.yg)("a",{parentName:"li",href:"#login"},"authentication"))),(0,t.yg)("p",null,"Status codes:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"303")," if package is successfully uploaded. ",(0,t.yg)("inlineCode",{parentName:"li"},"location")," is root of module"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"400")," if validation in URL parameters or form fields fails"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"401")," if user is not authorized"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"409")," if package already exists or version in a major range is not newer than previous version in a major range"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"413")," if package is too large"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"415")," if file format of the uploaded file is unsupported"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"422")," if a entry in the uploaded file could not be parsed or errored"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"502")," if package could not be written to the sink")),(0,t.yg)("p",null,"Example:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},'curl -X PUT -i -F package=@archive.tgz -H "Authorization: Bearer {:token}" http://localhost:4001/pkg/fuzz/8.4.1\n')),(0,t.yg)("h3",{id:"latest-package-versions"},"Latest Package versions"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Method:")," ",(0,t.yg)("inlineCode",{parentName:"p"},"GET")),(0,t.yg)("p",null,"Retrieves an overview of the latest major versions of a package."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"https://:assetServerUrl:port/pkg/:name\n")),(0,t.yg)("p",null,"URL parameters:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":name")," is the name of the package. Validator: Comply with ",(0,t.yg)("a",{parentName:"li",href:"https://github.com/npm/validate-npm-package-name"},"npm package names"),".")),(0,t.yg)("p",null,"Status codes:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"200")," if file is successfully retrieved"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"404")," if file is not found")),(0,t.yg)("p",null,"Example:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"curl -X GET http://localhost:4001/pkg/fuzz\n")),(0,t.yg)("h3",{id:"package-version-overview"},"Package version overview"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Method:")," ",(0,t.yg)("inlineCode",{parentName:"p"},"GET")),(0,t.yg)("p",null,"Retrieves an overview of the files of a package version."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"https://:assetServerUrl:port/pkg/:name/:version\n")),(0,t.yg)("p",null,"URL parameters:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":name")," is the name of the package. Validator: Comply with ",(0,t.yg)("a",{parentName:"li",href:"https://github.com/npm/validate-npm-package-name"},"npm package names"),"."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":version")," is the version of the package. Validator: Comply with ",(0,t.yg)("a",{parentName:"li",href:"https://semver.org/"},"semver validation regex"),".")),(0,t.yg)("p",null,"Status codes:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"200")," if file is successfully retrieved"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"404")," if file is not found")),(0,t.yg)("p",null,"Example:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"curl -X GET http://localhost:4001/pkg/fuzz\n")),(0,t.yg)("h2",{id:"npm-packages"},"NPM Packages"),(0,t.yg)("p",null,"An NPM package is a local replica of a package found in the ",(0,t.yg)("a",{parentName:"p",href:"https://www.npmjs.com/"},"NPM registry")," intended to be referenced from an HTML document and\nloaded by a browser. In most cases, with some exceptions, an NPM Package will be a library or utillity that other ",(0,t.yg)("a",{parentName:"p",href:"#packages"},"Packages")," depend upon."),(0,t.yg)("p",null,"NPM Packages are versioned and consist of one or more files. An NPM package of a specific version is immutable."),(0,t.yg)("h3",{id:"endpoint-summary-table-2"},"Endpoint Summary Table"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Name"),(0,t.yg)("th",{parentName:"tr",align:null},"Verb"),(0,t.yg)("th",{parentName:"tr",align:null},"Endpoint"),(0,t.yg)("th",{parentName:"tr",align:null},"Form Fields"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#public-npm-package-url"},"Public NPM Package URL")),(0,t.yg)("td",{parentName:"tr",align:null},"GET"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"/npm/:name/:version/:extras")),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#upload-a-npm-package"},"Upload an NPM Package")),(0,t.yg)("td",{parentName:"tr",align:null},"PUT"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"/npm/:name/:version")),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"package"))))),(0,t.yg)("h3",{id:"public-npm-package-url"},"Public NPM Package URL"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Method:")," ",(0,t.yg)("inlineCode",{parentName:"p"},"GET")),(0,t.yg)("p",null,"Retrieves files from an NPM package on the service."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"https://:assetServerUrl:port/npm/:name/:version/:extras\n")),(0,t.yg)("p",null,"URL parameters:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":name")," is the name of the NPM package. Validator: Comply with ",(0,t.yg)("a",{parentName:"li",href:"https://github.com/npm/validate-npm-package-name"},"npm package names"),"."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":version")," is the version of the NPM package. Validator: Comply with ",(0,t.yg)("a",{parentName:"li",href:"https://semver.org/"},"semver validation regex"),"."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":extras")," wildcard pathname to any file in the NPM package")),(0,t.yg)("p",null,"Status codes:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"200")," if file is successfully retrieved"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"404")," if file is not found")),(0,t.yg)("p",null,"Example:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"curl -X GET http://localhost:4001/npm/fuzz/8.4.1/main/index.js\n")),(0,t.yg)("h3",{id:"upload-a-npm-package"},"Upload a NPM Package"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Method:")," ",(0,t.yg)("inlineCode",{parentName:"p"},"PUT")),(0,t.yg)("p",null,"Puts a new NPM package on the service."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"https://:assetServerUrl:port/npm/:name/:version\n")),(0,t.yg)("p",null,"URL parameters:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":name")," is the name of the NPM package. Validator: Comply with ",(0,t.yg)("a",{parentName:"li",href:"https://github.com/npm/validate-npm-package-name"},"npm package names"),"."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":version")," is the version of the NPM package. Validator: Comply with ",(0,t.yg)("a",{parentName:"li",href:"https://semver.org/"},"semver validation regex"),".")),(0,t.yg)("p",null,"Form parameters:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"package")," a ",(0,t.yg)("inlineCode",{parentName:"li"},"tar")," or ",(0,t.yg)("inlineCode",{parentName:"li"},"tar.gz")," containing the files of the NPM package")),(0,t.yg)("p",null,"HTTP headers:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"Authorization")," a JWT authorization bearer with the token retrieved from a successful ",(0,t.yg)("a",{parentName:"li",href:"#login"},"authentication"))),(0,t.yg)("p",null,"Status codes:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"303")," if NPM package is successfully uploaded. ",(0,t.yg)("inlineCode",{parentName:"li"},"location")," is root of module"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"400")," if validation in URL parameters or form fields fails"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"401")," if user is not authorized"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"409")," if NPM package already exist or version in a major range is not newer than previous version in a major range"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"413")," if package is too large"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"415")," if file format of the uploaded file is unsupported"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"422")," if a entry in the uploaded file could not be parsed or errored"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"502")," if NPM package could not be written to the sink")),(0,t.yg)("p",null,"Example:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},'curl -X PUT -i -F package=@archive.tgz -H "Authorization: Bearer {:token}" http://localhost:4001/npm/fuzz/8.4.1\n')),(0,t.yg)("h3",{id:"latest-npm-package-versions"},"Latest NPM Package versions"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Method:")," ",(0,t.yg)("inlineCode",{parentName:"p"},"GET")),(0,t.yg)("p",null,"Retrieves an overview of the latest major versions of an NPM package."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"https://:assetServerUrl:port/npm/:name\n")),(0,t.yg)("p",null,"URL parameters:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":name")," is the name of the NPM package. Validator: Comply with ",(0,t.yg)("a",{parentName:"li",href:"https://github.com/npm/validate-npm-package-name"},"npm package names"),".")),(0,t.yg)("p",null,"Status codes:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"200")," if file is successfully retrieved"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"404")," if file is not found")),(0,t.yg)("p",null,"Example:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"curl -X GET http://localhost:4001/npm/fuzz\n")),(0,t.yg)("h3",{id:"npm-package-version-overview"},"NPM Package version overview"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Method:")," ",(0,t.yg)("inlineCode",{parentName:"p"},"GET")),(0,t.yg)("p",null,"Retrieves an overview of the files of an NPM package version."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"https://:assetServerUrl:port/npm/:name/:version\n")),(0,t.yg)("p",null,"URL parameters:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":name")," is the name of the NPM package. Validator: Comply with ",(0,t.yg)("a",{parentName:"li",href:"https://github.com/npm/validate-npm-package-name"},"npm package names"),"."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":version")," is the version of the NPM package. Validator: Comply with ",(0,t.yg)("a",{parentName:"li",href:"https://semver.org/"},"semver validation regex"),".")),(0,t.yg)("p",null,"Status codes:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"200")," if file is successfully retrieved"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"404")," if file is not found")),(0,t.yg)("p",null,"Example:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"curl -X GET http://localhost:4001/npm/fuzz\n")),(0,t.yg)("h2",{id:"import-maps"},"Import Maps"),(0,t.yg)("p",null,"An ",(0,t.yg)("a",{parentName:"p",href:"https://github.com/WICG/import-maps"},"import map")," holds a mapping or a set of mappings between ECMA Script Module (ESM) bare imports and an absolute URL.\nImport maps are versioned and are immutable."),(0,t.yg)("h3",{id:"endpoint-summary-table-3"},"Endpoint Summary Table"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Name"),(0,t.yg)("th",{parentName:"tr",align:null},"Verb"),(0,t.yg)("th",{parentName:"tr",align:null},"Endpoint"),(0,t.yg)("th",{parentName:"tr",align:null},"Form Fields"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#public-import-map-url"},"Public Import Map URL")),(0,t.yg)("td",{parentName:"tr",align:null},"GET"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"/map/:name/:version")),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#upload-an-import-map"},"Upload an Import Map")),(0,t.yg)("td",{parentName:"tr",align:null},"PUT"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"/map/:name/:version")),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"map"))))),(0,t.yg)("h3",{id:"public-import-maps-url"},"Public Import Maps URL"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Method:")," ",(0,t.yg)("inlineCode",{parentName:"p"},"GET")),(0,t.yg)("p",null,"Retrieves an import map from the service."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"https://:assetServerUrl:port/map/:name/:version\n")),(0,t.yg)("p",null,"URL parameters:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":name")," is the name of the import map. Validator: Comply with ",(0,t.yg)("a",{parentName:"li",href:"https://github.com/npm/validate-npm-package-name"},"npm package names"),"."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":version")," is the version of the import map. Validator: Comply with ",(0,t.yg)("a",{parentName:"li",href:"https://semver.org/"},"semver validation regex"),".")),(0,t.yg)("p",null,"Status codes:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"200")," if import map is successfully retrieved"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"404")," if import map is not found")),(0,t.yg)("p",null,"Example:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"curl -X GET http://localhost:4001/map/buzz/8.4.1\n")),(0,t.yg)("h3",{id:"upload-an-import-map"},"Upload an Import Map"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Method:")," ",(0,t.yg)("inlineCode",{parentName:"p"},"PUT")),(0,t.yg)("p",null,"Puts a new import map at the service."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"https://:assetServerUrl:port/map/:name/:version\n")),(0,t.yg)("p",null,"URL parameters:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":name")," is the name of the import map. Validator: Comply with ",(0,t.yg)("a",{parentName:"li",href:"https://github.com/npm/validate-npm-package-name"},"npm package names"),"."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":version")," is the version of the import map. Validator: Comply with ",(0,t.yg)("a",{parentName:"li",href:"https://semver.org/"},"semver validation regex"),".")),(0,t.yg)("p",null,"Form parameters:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"map")," a ",(0,t.yg)("inlineCode",{parentName:"li"},"json")," file (the import map)")),(0,t.yg)("p",null,"HTTP headers:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"Authorization")," a jwt authorization bearer with the token retrieved from a successful ",(0,t.yg)("a",{parentName:"li",href:"#login"},"authentication"))),(0,t.yg)("p",null,"Status codes:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"303")," if import map is successfully uploaded. ",(0,t.yg)("inlineCode",{parentName:"li"},"location")," is ",(0,t.yg)("a",{parentName:"li",href:"#public-import-map-url"},"Public Import Map URL")),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"400")," if validation in URL parameters or form fields fails"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"401")," if user is not authorized"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"409")," if import map already exist"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"415")," if file format of the uploaded import map is unsupported"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"502")," if import map could not be written to the sink")),(0,t.yg)("p",null,"Example:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},'curl -X PUT -i -F map=@import-map.json -H "Authorization: Bearer {:token}" http://localhost:4001/map/buzz/8.4.1\n')),(0,t.yg)("h3",{id:"latest-import-map-versions"},"Latest Import Map versions"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Method:")," ",(0,t.yg)("inlineCode",{parentName:"p"},"GET")),(0,t.yg)("p",null,"Retrieves an overview of the latest versions of a Import Map."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"https://:assetServerUrl:port/map/:name\n")),(0,t.yg)("p",null,"URL parameters:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":name")," is the name of the import map. Validator: Comply with ",(0,t.yg)("a",{parentName:"li",href:"https://github.com/npm/validate-npm-package-name"},"npm package names"),".")),(0,t.yg)("p",null,"Status codes:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"200")," if file is successfully retrieved"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"404")," if file is not found")),(0,t.yg)("p",null,"Example:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"curl -X GET http://localhost:4001/map/buzz\n")),(0,t.yg)("h2",{id:"aliases"},"Aliases"),(0,t.yg)("p",null,"An alias is a shorthand between a major version of a package / import map and the set exact version of the package / import map."),(0,t.yg)("h3",{id:"endpoint-summary-table-4"},"Endpoint Summary Table"),(0,t.yg)("table",null,(0,t.yg)("thead",{parentName:"table"},(0,t.yg)("tr",{parentName:"thead"},(0,t.yg)("th",{parentName:"tr",align:null},"Name"),(0,t.yg)("th",{parentName:"tr",align:null},"Verb"),(0,t.yg)("th",{parentName:"tr",align:null},"Endpoint"),(0,t.yg)("th",{parentName:"tr",align:null},"Form Fields"))),(0,t.yg)("tbody",{parentName:"table"},(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#public-alias-url"},"Public Alias URL")),(0,t.yg)("td",{parentName:"tr",align:null},"GET"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"/:type/:name/v:alias/:extras")),(0,t.yg)("td",{parentName:"tr",align:null})),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#create-alias"},"Create Alias")),(0,t.yg)("td",{parentName:"tr",align:null},"PUT"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"/:type/:name/v:alias")),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"version"))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#update-alias"},"Update Alias")),(0,t.yg)("td",{parentName:"tr",align:null},"POST"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"/:type/:name/v:alias")),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"version"))),(0,t.yg)("tr",{parentName:"tbody"},(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("a",{parentName:"td",href:"#delete-alias"},"Delete Alias")),(0,t.yg)("td",{parentName:"tr",align:null},"DELETE"),(0,t.yg)("td",{parentName:"tr",align:null},(0,t.yg)("inlineCode",{parentName:"td"},"/:type/:name/v:alias")),(0,t.yg)("td",{parentName:"tr",align:null})))),(0,t.yg)("h3",{id:"public-alias-url"},"Public Alias URL"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Method:")," ",(0,t.yg)("inlineCode",{parentName:"p"},"GET")),(0,t.yg)("p",null,"Retrieves files from a package or an import map at the service."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"https://:assetServerUrl:port/:type/:name/v:alias/:extras\n")),(0,t.yg)("p",null,"URL parameters:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":type")," is the type to retrieve from. Validator: ",(0,t.yg)("inlineCode",{parentName:"li"},"pkg"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"npm")," or ",(0,t.yg)("inlineCode",{parentName:"li"},"map"),"."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":name")," is the name of the package / import map. Validator: Comply with ",(0,t.yg)("a",{parentName:"li",href:"https://github.com/npm/validate-npm-package-name"},"npm package names"),"."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":alias")," is the major version of the package / import map. Validator: Comply with ",(0,t.yg)("a",{parentName:"li",href:"https://semver.org/"},"semver validation regex"),"."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":extras")," whildcard pathname to any file in a package. Does not apply to import maps.")),(0,t.yg)("p",null,"Status codes:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"302")," if alias exist"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"404")," if alias is not found")),(0,t.yg)("p",null,"Example:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"curl -X GET -L http://localhost:4001/pkg/fuzz/v8/main/index.js\ncurl -X GET -L http://localhost:4001/map/buzz/v4\n")),(0,t.yg)("h3",{id:"create-alias"},"Create Alias"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Method:")," ",(0,t.yg)("inlineCode",{parentName:"p"},"PUT")),(0,t.yg)("p",null,"Create a new alias."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"https://:assetServerUrl:port/:type/:name/v:alias\n")),(0,t.yg)("p",null,"URL parameters:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":type")," is the type to retrieve from. Validator: ",(0,t.yg)("inlineCode",{parentName:"li"},"pkg"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"npm")," or ",(0,t.yg)("inlineCode",{parentName:"li"},"map"),"."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":name")," is the name of the package / import map. Validator: Comply with ",(0,t.yg)("a",{parentName:"li",href:"https://github.com/npm/validate-npm-package-name"},"npm package names"),"."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":alias")," is the major version of the package / import map. Validator: Comply with ",(0,t.yg)("a",{parentName:"li",href:"https://semver.org/"},"semver validation regex"),".")),(0,t.yg)("p",null,"Form parameters:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":version")," full version of the package to be aliased")),(0,t.yg)("p",null,"HTTP headers:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"Authorization")," a jwt authorization bearer with the token retrieved from a successful ",(0,t.yg)("a",{parentName:"li",href:"#login"},"authentication"))),(0,t.yg)("p",null,"Status codes:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"303")," if alias is successfully created. ",(0,t.yg)("inlineCode",{parentName:"li"},"location")," points to the alias"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"400")," if validation in URL parameters or form fields fails"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"401")," if user is not authorized"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"409")," if alias already exist"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"502")," if alias could not be altered by the sink")),(0,t.yg)("p",null,"Example:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},'curl -X PUT -i -F version=8.4.1 -H "Authorization: Bearer {:token}" http://localhost:4001/pkg/fuzz/v8\ncurl -X PUT -i -F version=4.2.2 -H "Authorization: Bearer {:token}" http://localhost:4001/map/buzz/v4\n')),(0,t.yg)("h3",{id:"update-alias"},"Update Alias"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Method:")," ",(0,t.yg)("inlineCode",{parentName:"p"},"POST")),(0,t.yg)("p",null,"Updates an existing alias."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"https://:assetServerUrl:port/:type/:name/v:alias\n")),(0,t.yg)("p",null,"URL parameters:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":type")," is the type to retrieve from. Validator: ",(0,t.yg)("inlineCode",{parentName:"li"},"pkg"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"npm")," or ",(0,t.yg)("inlineCode",{parentName:"li"},"map"),"."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":name")," is the name of the package / import map. Validator: Comply with ",(0,t.yg)("a",{parentName:"li",href:"https://github.com/npm/validate-npm-package-name"},"npm package names"),"."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":alias")," is the major version of the package / import map. Validator: Comply with ",(0,t.yg)("a",{parentName:"li",href:"https://semver.org/"},"semver validation regex"),".")),(0,t.yg)("p",null,"Form parameters:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":version")," full version of the package to be aliased")),(0,t.yg)("p",null,"HTTP headers:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"Authorization")," a jwt authorization bearer with the token retrieved from a successful ",(0,t.yg)("a",{parentName:"li",href:"#login"},"authentication"))),(0,t.yg)("p",null,"Status codes:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"303")," if alias is successfully created. ",(0,t.yg)("inlineCode",{parentName:"li"},"location")," points to the alias"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"401")," if user is not authorized"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"404")," if alias does not exist"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"502")," if alias could not be altered by the sink")),(0,t.yg)("p",null,"Example:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},'curl -X POST -i -F version=8.4.1 -H "Authorization: Bearer {:token}" http://localhost:4001/pkg/fuzz/v8\ncurl -X POST -i -F version=4.4.2 -H "Authorization: Bearer {:token}" http://localhost:4001/map/buzz/v4\n')),(0,t.yg)("h3",{id:"delete-alias"},"Delete Alias"),(0,t.yg)("p",null,(0,t.yg)("strong",{parentName:"p"},"Method:")," ",(0,t.yg)("inlineCode",{parentName:"p"},"DELETE")),(0,t.yg)("p",null,"Deletes an existing alias."),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},"https://:assetServerUrl:port/:type/:name/v:alias\n")),(0,t.yg)("p",null,"URL parameters:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":type")," is the type to retrieve from. Validator: ",(0,t.yg)("inlineCode",{parentName:"li"},"pkg"),", ",(0,t.yg)("inlineCode",{parentName:"li"},"npm")," or ",(0,t.yg)("inlineCode",{parentName:"li"},"map"),"."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":name")," is the name of the package / import map. Validator: Comply with ",(0,t.yg)("a",{parentName:"li",href:"https://github.com/npm/validate-npm-package-name"},"npm package names"),"."),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},":alias")," is the major version of the package / import map. Validator: Comply with ",(0,t.yg)("a",{parentName:"li",href:"https://semver.org/"},"semver validation regex"),".")),(0,t.yg)("p",null,"HTTP headers:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"Authorization")," a jwt authorization bearer with the token retrieved from a successful ",(0,t.yg)("a",{parentName:"li",href:"#login"},"authentication"))),(0,t.yg)("p",null,"Status codes:"),(0,t.yg)("ul",null,(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"204")," if alias is successfully deleted"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"401")," if user is not authorized"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"404")," if alias does not exist"),(0,t.yg)("li",{parentName:"ul"},(0,t.yg)("inlineCode",{parentName:"li"},"502")," if alias could not be altered by the sink")),(0,t.yg)("p",null,"Example:"),(0,t.yg)("pre",null,(0,t.yg)("code",{parentName:"pre",className:"language-bash"},'curl -X DELETE -H "Authorization: Bearer {:token}" http://localhost:4001/pkg/fuzz/v8\ncurl -X DELETE -H "Authorization: Bearer {:token}" http://localhost:4001/map/buzz/v4\n')))}y.isMDXComponent=!0}}]);