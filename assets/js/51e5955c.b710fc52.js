"use strict";(self.webpackChunkeik=self.webpackChunkeik||[]).push([[201],{8554:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>c,toc:()=>l});var s=i(4848),t=i(8453);const o={title:"Publish to Eik on GitHub Actions"},r=void 0,c={id:"guides/github-actions",title:"Publish to Eik on GitHub Actions",description:"This guide describes how to use GitHub Actions to publish to an Eik server. It describes two different approaches:",source:"@site/docs/guides/github-actions.md",sourceDirName:"guides",slug:"/guides/github-actions",permalink:"/docs/guides/github-actions",draft:!1,unlisted:!1,editUrl:"https://github.com/eik-lib/eik-lib.github.io/tree/source/docs/guides/github-actions.md",tags:[],version:"current",frontMatter:{title:"Publish to Eik on GitHub Actions"},sidebar:"sidebar",previous:{title:"Using Eik with Webpack",permalink:"/docs/guides/webpack"},next:{title:"Publish to Eik on Travis",permalink:"/docs/guides/travis"}},a={},l=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Using Semantic Release",id:"using-semantic-release",level:2},{value:"Semantic release workflow",id:"semantic-release-workflow",level:3},{value:"Using the Eik CLI",id:"using-the-eik-cli",level:2},{value:"Automatically increment the patch version number",id:"automatically-increment-the-patch-version-number",level:3}];function u(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"This guide describes how to use GitHub Actions to publish to an Eik server. It describes two different approaches:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#using-semantic-release",children:"Using Semantic Release"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"#using-the-eik-cli",children:"Using the Eik CLI"})}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Choose the one you prefer."}),"\n",(0,s.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.p,{children:["Your repo needs to have access to an Eik login key. Store this as a ",(0,s.jsx)(n.a,{href:"https://docs.github.com/en/actions/security-guides/using-secrets-in-github-actions",children:"Secret you can use in GitHub Actions"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["In this guide we'll be using ",(0,s.jsx)(n.code,{children:"EIK_TOKEN"})," as the secret name."]}),"\n",(0,s.jsx)(n.h2,{id:"using-semantic-release",children:"Using Semantic Release"}),"\n",(0,s.jsxs)(n.p,{children:["There is an ",(0,s.jsx)(n.a,{href:"https://github.com/eik-lib/semantic-release#readme",children:"Eik plugin"})," for ",(0,s.jsx)(n.a,{href:"https://semantic-release.gitbook.io/semantic-release",children:"Semantic Release"})," you can use to automatically update the version number in ",(0,s.jsx)(n.code,{children:"eik.json"})," based on ",(0,s.jsx)(n.a,{href:"https://www.conventionalcommits.org/",children:"conventional commits"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["To use it, update your ",(0,s.jsx)(n.code,{children:"release.config.js"})," to add the plugin, and commit ",(0,s.jsx)(n.code,{children:"eik.json"})," back to Git."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:'export default {\n\tplugins: [\n\t\t"@eik/semantic-release",\n\t\t["@semantic-release/git", { assets: ["eik.json"] }],\n\t],\n};\n'})}),"\n",(0,s.jsx)(n.h3,{id:"semantic-release-workflow",children:"Semantic release workflow"}),"\n",(0,s.jsxs)(n.p,{children:["With the Eik plugin configured, update ",(0,s.jsx)(n.a,{href:"https://semantic-release.gitbook.io/semantic-release/recipes/ci-configurations/github-actions#github-workflows-release.yml-configuration-for-node-projects",children:"your release workflow"})," to pass on the ",(0,s.jsx)(n.code,{children:"EIK_TOKEN"})," secret to ",(0,s.jsx)(n.code,{children:"semantic-release"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"- name: Release\n  env:\n    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\n    NPM_TOKEN: ${{ secrets.NPM_TOKEN }}\n    EIK_TOKEN: ${{ secrets.EIK_TOKEN }}\n  run: npx semantic-release\n"})}),"\n",(0,s.jsx)(n.h2,{id:"using-the-eik-cli",children:"Using the Eik CLI"}),"\n",(0,s.jsxs)(n.p,{children:["You can automate publishing to Eik using the ",(0,s.jsx)(n.a,{href:"/docs/reference/at-eik-cli/",children:"Eik CLI"}),"."]}),"\n",(0,s.jsxs)(n.p,{children:["This example requires you manually update the version number in ",(0,s.jsx)(n.code,{children:"eik.json"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:"name: Publish to Eik\n\non:\n  push:\n    branches:\n      - main\n    paths:\n      - eik.json\n\njobs:\n  publish:\n    runs-on: [ubuntu-latest]\n    steps:\n      - uses: actions/checkout@v4\n\n      - uses: actions/setup-node@v4\n        with:\n          node-version: 20\n\n      # you can also add @eik/cli to your devDependencies\n      - run: npm install --global @eik/cli@^3\n\n      - name: Publish to Eik\n        run: |\n          eik login --key ${{secrets.EIK_TOKEN}}\n          eik publish\n"})}),"\n",(0,s.jsx)(n.h3,{id:"automatically-increment-the-patch-version-number",children:"Automatically increment the patch version number"}),"\n",(0,s.jsxs)(n.p,{children:["If you don't really care about the version number you can use the ",(0,s.jsx)(n.code,{children:"eik version"})," command to increment the version number on CI.\nThe version will only be updated if the CLI detects there are changes to the files."]}),"\n",(0,s.jsxs)(n.p,{children:["Remember to commit the updated ",(0,s.jsx)(n.code,{children:"eik.json"})," back to your repository."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-yaml",children:'name: Publish to Eik\n\non:\n  push:\n    branches:\n      - main\n\njobs:\n  publish:\n    runs-on: [ubuntu-latest]\n    steps:\n      - uses: actions/checkout@v4\n\n      - uses: actions/setup-node@v4\n        with:\n          node-version: 20\n\n      # you can also add @eik/cli to your devDependencies\n      - run: npm install --global @eik/cli@^3\n\n      - name: Publish to Eik\n        run: |\n          eik login --key ${{secrets.EIK_TOKEN}}\n          eik version || true\n          eik publish\n\n      - name: Commit updated eik.json if version changed\n        # git diff --quiet will exit with code 0 if there are no changes.\n        # if there _are_ changes (a new version), the right-hand side of || will run\n        run: |\n          git config --global user.name "github-actions[bot]"\n          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"\n          git diff --quiet || (git commit --all --message "chore: update version number in eik.json [skip ci]" && git push origin HEAD)\n        shell: bash\n'})})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>c});var s=i(6540);const t={},o=s.createContext(t);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);