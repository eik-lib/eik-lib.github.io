"use strict";(self.webpackChunkeik=self.webpackChunkeik||[]).push([[671],{5680:(e,t,n)=>{n.d(t,{xA:()=>p,yg:()=>h});var i=n(6540);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=i.createContext({}),c=function(e){var t=i.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},p=function(e){var t=c(e.components);return i.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},g=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(n),g=r,h=u["".concat(l,".").concat(g)]||u[g]||m[g]||a;return n?i.createElement(h,s(s({ref:t},p),{},{components:n})):i.createElement(h,s({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=g;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[u]="string"==typeof e?e:r,s[1]=o;for(var c=2;c<a;c++)s[c]=n[c];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}g.displayName="MDXCreateElement"},8697:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>m,frontMatter:()=>a,metadata:()=>o,toc:()=>c});var i=n(8168),r=(n(6540),n(5680));const a={id:"travis",title:"Travis",sidebar_label:"Travis"},s=void 0,o={unversionedId:"travis",id:"travis",title:"Travis",description:"Publishing to an Eik server from a Travis CI build can be achieved with a few commands.",source:"@site/docs/travis.md",sourceDirName:".",slug:"/travis",permalink:"/docs/travis",draft:!1,tags:[],version:"current",frontMatter:{id:"travis",title:"Travis",sidebar_label:"Travis"},sidebar:"mainSidebar",previous:{title:"Overview",permalink:"/docs/ci"}},l={},c=[{value:"Setup secrets in Travis",id:"setup-secrets-in-travis",level:2},{value:"Set up versioning and publishing in .travis.yml",id:"set-up-versioning-and-publishing-in-travisyml",level:2},{value:"Create a commit script",id:"create-a-commit-script",level:2},{value:"Run the commit script from .travis.yml",id:"run-the-commit-script-from-travisyml",level:2}],p={toc:c},u="wrapper";function m(e){let{components:t,...a}=e;return(0,r.yg)(u,(0,i.A)({},p,a,{components:t,mdxType:"MDXLayout"}),(0,r.yg)("p",null,"Publishing to an Eik server from a Travis CI build can be achieved with a few commands."),(0,r.yg)("h2",{id:"setup-secrets-in-travis"},"Setup secrets in Travis"),(0,r.yg)("p",null,"Two secrets will need to be available in order to publish to your Eik server and commit to your git repository. Travis provides a settings page where you can set secret environment variables and we recommend that you use this to do so."),(0,r.yg)("p",null,"The Eik server key will need to be obtained from your Eik server provider, a Github personal access token can be created by visiting ",(0,r.yg)("a",{parentName:"p",href:"https://github.com/settings/tokens"},"this page"),"."),(0,r.yg)("p",null,(0,r.yg)("img",{src:n(6858).A,width:"2440",height:"704"}),"\n",(0,r.yg)("img",{src:n(1792).A,width:"2428",height:"518"})),(0,r.yg)("h2",{id:"set-up-versioning-and-publishing-in-travisyml"},"Set up versioning and publishing in .travis.yml"),(0,r.yg)("p",null,"The following gives an example of how to run version and publish commands from ",(0,r.yg)("inlineCode",{parentName:"p"},".travis.yml"),". The login command uses the ",(0,r.yg)("inlineCode",{parentName:"p"},"EIK_SERVER_KEY")," that was setup in the previous step."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yml"},"language: node_js\nnode_js:\n  - 14\nbefore_script:\n  - npm i -g @eik/cli\nscript:\n  - eik login -k $EIK_SERVER_KEY\n  - eik version\n  - eik package\n")),(0,r.yg)("p",null,"If you have a build step that you need to run before publish, you could just insert that into the ",(0,r.yg)("inlineCode",{parentName:"p"},"script")," section as shown."),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yml"},"script:\n  - <build command here>\n  - eik login -k $EIK_SERVER_KEY\n  - eik version\n  - eik package\n")),(0,r.yg)("h2",{id:"create-a-commit-script"},"Create a commit script"),(0,r.yg)("p",null,"The most challenging part of publishing from CI is committing back to your git repository. The following is an example of a script that commits changes to ",(0,r.yg)("inlineCode",{parentName:"p"},"eik.json")," and pushes that commit back to github. It uses the ",(0,r.yg)("inlineCode",{parentName:"p"},"GH_TOKEN")," script defined in the first step."),(0,r.yg)("p",null,(0,r.yg)("strong",{parentName:"p"},"commit.sh")),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-sh"},'#!/usr/bin/env bash\n\n# Set the repo name from the github url\n# For git@github.schibsted.io:finn/min-finn.git, the repo name would be min-finn\nREPO="<repo name>"\n\n# Travis doesn\'t make it easy to get the current branch so... this...\nBRANCH=$(if [ "$TRAVIS_PULL_REQUEST" == "false" ]; then echo $TRAVIS_BRANCH; else echo $TRAVIS_PULL_REQUEST_BRANCH; fi)\n\n# Set the user email and name for the commit, set these to whatever you prefer\ngit config --global user.email "travis@travis-ci.org"\ngit config --global user.name "Travis CI"\n\n# Travis checks out a commit hash rather than a branch so we need to add the branch, fetch it and check it out\ngit remote set-branches --add origin $BRANCH\ngit fetch origin\ngit branch $BRANCH origin/$BRANCH\ngit checkout $BRANCH\n\n# Push the changes to the remote\ngit push origin $BRANCH\n')),(0,r.yg)("h2",{id:"run-the-commit-script-from-travisyml"},"Run the commit script from .travis.yml"),(0,r.yg)("pre",null,(0,r.yg)("code",{parentName:"pre",className:"language-yml"},"script:\n  - eik login -k $EIK_SERVER_KEY\n  - eik version\n  - eik package\n  - ./commit.sh\n")),(0,r.yg)("p",null,"Once setup, when you push changes to Github, if any of the files to be published have changed, you should automatically get a new published version of your assets on your Eik server and your ",(0,r.yg)("inlineCode",{parentName:"p"},"eik.json")," file will have been updated with the new semver version number."))}m.isMDXComponent=!0},1792:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/travis-settings-page-a682846298f0ba573b5b83514f828486.png"},6858:(e,t,n)=>{n.d(t,{A:()=>i});const i=n.p+"assets/images/travis-settings-d9c37b8b46cf2efb182632b5e92200e2.png"}}]);