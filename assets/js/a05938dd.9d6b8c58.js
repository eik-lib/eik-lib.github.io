"use strict";(self.webpackChunkeik=self.webpackChunkeik||[]).push([[407],{2124:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>t,metadata:()=>o,toc:()=>a});var s=n(4848),r=n(8453);const t={id:"server_api",title:"Eik server - Programatic API",sidebar_label:"Programatic API"},c=void 0,o={id:"server_api",title:"Eik server - Programatic API",description:"The Eik service is distributed as a Fastify plugin and has the following programatic API:",source:"@site/docs/server_api.md",sourceDirName:".",slug:"/server_api",permalink:"/docs/server_api",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{id:"server_api",title:"Eik server - Programatic API",sidebar_label:"Programatic API"},sidebar:"mainSidebar",previous:{title:"Server",permalink:"/docs/server"},next:{title:"Sink",permalink:"/docs/server_sink"}},l={},a=[{value:"Constructor",id:"constructor",level:2},{value:"options (optional)",id:"options-optional",level:3},{value:"customSink",id:"customsink",level:4},{value:"API",id:"api",level:2},{value:".api()",id:"api-1",level:3},{value:".health() (async)",id:"health-async",level:3},{value:"Properties",id:"properties",level:2},{value:".metrics",id:"metrics",level:3},{value:".config",id:"config",level:3},{value:".logger",id:"logger",level:3},{value:".sink",id:"sink",level:3}];function h(e){const i={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(i.p,{children:["The Eik service is distributed as a ",(0,s.jsx)(i.a,{href:"https://www.fastify.io/",children:"Fastify"})," plugin and has the following programatic API:"]}),"\n",(0,s.jsx)(i.h2,{id:"constructor",children:"Constructor"}),"\n",(0,s.jsx)(i.p,{children:"Create a new Eik service instance."}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-js",children:'import Service from "@eik/service";\nconst service = new Service(options);\n'})}),"\n",(0,s.jsx)(i.h3,{id:"options-optional",children:"options (optional)"}),"\n",(0,s.jsx)(i.p,{children:"An Object containing misc configuration. The following values can be provided:"}),"\n",(0,s.jsxs)(i.table,{children:[(0,s.jsx)(i.thead,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.th,{children:"option"}),(0,s.jsx)(i.th,{children:"default"}),(0,s.jsx)(i.th,{children:"type"}),(0,s.jsx)(i.th,{children:"required"}),(0,s.jsx)(i.th,{children:"details"})]})}),(0,s.jsx)(i.tbody,{children:(0,s.jsxs)(i.tr,{children:[(0,s.jsx)(i.td,{children:"customSink"}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"null"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"object"})}),(0,s.jsx)(i.td,{children:(0,s.jsx)(i.code,{children:"false"})}),(0,s.jsx)(i.td,{children:"A custom sink"})]})})]}),"\n",(0,s.jsx)(i.h4,{id:"customsink",children:"customSink"}),"\n",(0,s.jsxs)(i.p,{children:["A custom sink. The sink must extend the ",(0,s.jsx)(i.a,{href:"https://github.com/eik-lib/sink",children:"sink interface"}),"."]}),"\n",(0,s.jsxs)(i.p,{children:["Example using the ",(0,s.jsx)(i.a,{href:"https://github.com/eik-lib/sink-gcs",children:"Google Cloud Storage sink"}),":"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-js",children:'import Service from "@eik/service";\nimport Sink from "@eik/sink-gcs";\n\n// Set up the Google Cloud Storage sink\nconst sink = new Sink();\n\n// Set up the Eik service as a plugin\nconst service = new Service({ customSink: sink });\n'})}),"\n",(0,s.jsx)(i.h2,{id:"api",children:"API"}),"\n",(0,s.jsx)(i.p,{children:"An Eik service instance has the following API:"}),"\n",(0,s.jsx)(i.h3,{id:"api-1",children:".api()"}),"\n",(0,s.jsxs)(i.p,{children:["The Eik service as a ",(0,s.jsx)(i.a,{href:"https://www.fastify.io/docs/latest/Plugins/",children:"Fastify plugin"}),". The returned function must be passed on to the Fastify ",(0,s.jsx)(i.code,{children:".register()"})," method:"]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-js",children:'import fastify from "fastify";\nimport Service from "@eik/service";\n\n// Set up the Eik service as a plugin\nconst service = new Service({ customSink: sink });\n\n// Set up Fastify\nconst app = fastify({\n  ignoreTrailingSlash: true,\n});\n\n// Register the Eik service in Fastify\napp.register(service.api());\n'})}),"\n",(0,s.jsxs)(i.p,{children:["This will mount the ",(0,s.jsx)(i.a,{href:"/docs/server_rest_api",children:"Eik REST API"})," into the Fastify application the plugin is registered to."]}),"\n",(0,s.jsxs)(i.p,{children:["Due to how the REST API deals with wildcards on pathnames to resolve files, it is recommended that the ",(0,s.jsx)(i.code,{children:"ignoreTrailingSlash"})," option on the Fastify constructor that the plugin is registered to is set to ",(0,s.jsx)(i.code,{children:"true"}),". If this is not done, file resolving might not work as expected."]}),"\n",(0,s.jsx)(i.h3,{id:"health-async",children:".health() (async)"}),"\n",(0,s.jsx)(i.p,{children:"Executes a health check on the Eik service. The health check mainly determines if the service is able to execute all methods needed to function properly using the current configured sink."}),"\n",(0,s.jsx)(i.p,{children:"We recommend executing the health check before the service begins accepting HTTP traffic:"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-js",children:'const run = async () => {\n  await service.health();\n  await app.listen(\n    service.config.get("http.port"),\n    service.config.get("http.address"),\n  );\n};\nrun();\n'})}),"\n",(0,s.jsx)(i.p,{children:"Throws if any of the health checks fails."}),"\n",(0,s.jsx)(i.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(i.p,{children:"An Eik service instance has the following properties:"}),"\n",(0,s.jsx)(i.h3,{id:"metrics",children:".metrics"}),"\n",(0,s.jsxs)(i.p,{children:["Property that exposes a metric stream. Please see the ",(0,s.jsx)(i.a,{href:"/docs/server_metrics",children:"metrics section"})," for further documentation."]}),"\n",(0,s.jsx)(i.h3,{id:"config",children:".config"}),"\n",(0,s.jsxs)(i.p,{children:["Property that exposes internal configuration. Can be used to retrieve internal configuration. Config is built upon ",(0,s.jsx)(i.a,{href:"https://github.com/mozilla/node-convict",children:"Node Convict"}),"."]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-js",children:'import Service from "@eik/service";\n\nconst service = new Service();\nservice.logger.info(`Server is running in ${service.config.get("env")} mode`);\n'})}),"\n",(0,s.jsx)(i.h3,{id:"logger",children:".logger"}),"\n",(0,s.jsxs)(i.p,{children:["Property that exposes the internal logger. Can be used to do additional logging. The internal logger is ",(0,s.jsx)(i.a,{href:"https://github.com/pinojs/pino",children:"Pino"}),"."]}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{className:"language-js",children:'import Service from "@eik/service";\n\nconst service = new Service();\nservice.logger.info(`Server is running in ${service.config.get("env")} mode`);\n'})}),"\n",(0,s.jsx)(i.h3,{id:"sink",children:".sink"}),"\n",(0,s.jsxs)(i.p,{children:["Property that exposes the currently used sink. Please see the ",(0,s.jsx)(i.a,{href:"/docs/server_metrics",children:"sink section"})," for further documentation."]})]})}function d(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,i,n)=>{n.d(i,{R:()=>c,x:()=>o});var s=n(6540);const r={},t=s.createContext(r);function c(e){const i=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:c(e.components),s.createElement(t.Provider,{value:i},e.children)}}}]);