"use strict";(self.webpackChunkeik=self.webpackChunkeik||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"mainSidebar":[{"type":"category","label":"Overview","items":[{"type":"link","label":"Overview","href":"/docs/overview","docId":"overview"},{"type":"link","label":"Concepts","href":"/docs/overview_concepts","docId":"overview_concepts"},{"type":"link","label":"Workflow","href":"/docs/overview_workflow","docId":"overview_workflow"},{"type":"link","label":"The eik.json File","href":"/docs/overview_eik_json","docId":"overview_eik_json"},{"type":"link","label":"Caching","href":"/docs/overview_caching","docId":"overview_caching"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Mapping","items":[{"type":"link","label":"Import Map","href":"/docs/mapping_import_map","docId":"mapping_import_map"},{"type":"link","label":"Browser Support","href":"/docs/mapping_browser","docId":"mapping_browser"},{"type":"link","label":"Build Tool Plugins","href":"/docs/mapping_plugins","docId":"mapping_plugins"},{"type":"link","label":"Bundling","href":"/docs/mapping_bundling","docId":"mapping_bundling"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Client","items":[{"type":"link","label":"Installation","href":"/docs/client_installation","docId":"client_installation"},{"type":"link","label":"Client Login","href":"/docs/client_login","docId":"client_login"},{"type":"link","label":"Application Packages","href":"/docs/client_app_packages","docId":"client_app_packages"},{"type":"link","label":"NPM Packages","href":"/docs/client_npm_packages","docId":"client_npm_packages"},{"type":"link","label":"Import Maps","href":"/docs/client_import_maps","docId":"client_import_maps"},{"type":"link","label":"Aliases","href":"/docs/client_aliases","docId":"client_aliases"},{"type":"link","label":"Putting It All Together","href":"/docs/client_putting_it_all_together","docId":"client_putting_it_all_together"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Server","items":[{"type":"link","label":"Server","href":"/docs/server","docId":"server"},{"type":"link","label":"Programatic API","href":"/docs/server_api","docId":"server_api"},{"type":"link","label":"Sink","href":"/docs/server_sink","docId":"server_sink"},{"type":"link","label":"REST API","href":"/docs/server_rest_api","docId":"server_rest_api"},{"type":"link","label":"File structure","href":"/docs/server_file_structure","docId":"server_file_structure"},{"type":"link","label":"Metrics","href":"/docs/server_metrics","docId":"server_metrics"}],"collapsed":true,"collapsible":true},{"type":"category","label":"CI Setup","items":[{"type":"link","label":"Overview","href":"/docs/ci","docId":"ci"},{"type":"link","label":"Travis","href":"/docs/travis","docId":"travis"}],"collapsed":true,"collapsible":true}]},"docs":{"ci":{"id":"ci","title":"CI Overview","description":"While it is fully possible (and in many cases perfectly acceptable) to simply publish new versions of your assets manually as needed, you may find yourself preferring an automated approach.","sidebar":"mainSidebar"},"client":{"id":"client","title":"Client","description":"Installation"},"client_aliases":{"id":"client_aliases","title":"Aliases","description":"Aliases are general package versions that point to exact package versions.","sidebar":"mainSidebar"},"client_app_packages":{"id":"client_app_packages","title":"Application Packages","description":"Publishing and serving your application\'s client side assets is the main task Eik was designed for. Given local paths to client side bundle files you produce, Eik will package up the files and upload them to an Eik server where they will be served for use in your production applications.","sidebar":"mainSidebar"},"client_import_maps":{"id":"client_import_maps","title":"Import Maps","description":"Common dependencies can be separated out of your application bundles by the use of import maps.","sidebar":"mainSidebar"},"client_installation":{"id":"client_installation","title":"Client Installation","description":"In order to interact with an Eik server, you must install the client which can then be used to perform a variety of tasks such as mirroring NPM packages, publishing app packages, aliasing, publishing import maps and more. Interacting with the client is done via the command line in a terminal. To get started, you will need to have Node.js installed which comes with the NPM package manager.","sidebar":"mainSidebar"},"client_login":{"id":"client_login","title":"Client Login","description":"To make use of the Eik client, it is necessary to authenticate with an Eik server. To do this, the eik login command can be used.","sidebar":"mainSidebar"},"client_npm_packages":{"id":"client_npm_packages","title":"ESM Friendly NPM Packages","description":"One task Eik can be used for is to serve packages that have been published to NPM as served, ESM friendly versions for you to use in your app packages.","sidebar":"mainSidebar"},"client_putting_it_all_together":{"id":"client_putting_it_all_together","title":"Putting It All Together","description":"Aliases can be used with application packages, NPM packages and import maps to make it easier to update versions without the need to update and redeploy applications.","sidebar":"mainSidebar"},"mapping_browser":{"id":"mapping_browser","title":"Browser Support","description":"Eventually, browsers will support Import Maps but currently (October 2020) no browser is shipped with Import Map enabled.","sidebar":"mainSidebar"},"mapping_bundling":{"id":"mapping_bundling","title":"Bundling","description":"Tools like Microbundle], [Create React App, [Vuex] and [Next.js] are popular for one primary reason: nobody likes configuring bundlers. We just want to write our app code and move on with our day.","sidebar":"mainSidebar"},"mapping_import_map":{"id":"mapping_import_map","title":"Import Map","description":"A key concept in Eik is to align the dependents of a module to the same version. A part of this concept is Import Maps which makes it possible to map import statements in modules.","sidebar":"mainSidebar"},"mapping_plugins":{"id":"mapping_plugins","title":"Build Tool Plugins","description":"Eik provides a set of build tool plugins that cater for applying Import Maps ahead of time.","sidebar":"mainSidebar"},"overview":{"id":"overview","title":"Overview","description":"Eik consist of 3 main parts. First of all Eik is an asset server for serving ECMA Script Modules (ESM) and CSS assets. Secondly, Eik is a client for easy upload and management of your assets to an Eik server. The third part is a set of utilities that can be used to align module dependencies to the same version.","sidebar":"mainSidebar"},"overview_caching":{"id":"overview_caching","title":"Caching","description":"","sidebar":"mainSidebar"},"overview_concepts":{"id":"overview_concepts","title":"Concepts","description":"Eik is for serving ESM and CSS but we use the term packages when we refer what is uploaded to an Eik server. A package can contain any set of files which are considered to be static assets on a web site. Despite being agnostic in its opinion about what a package can contain, Eik does have a package type definition which comes into play when organizing assets.","sidebar":"mainSidebar"},"overview_eik_json":{"id":"overview_eik_json","title":"The eik.json File","description":"Eik packaging is configured either by way of a JSON meta file called eik.json or by values included in a package.json file. Any project that publishes assets to an Eik server must provide this configuration in one (and only one) of these locations.","sidebar":"mainSidebar"},"overview_workflow":{"id":"overview_workflow","title":"Workflow","description":"In Eik, Import Maps and aliasing of assets are used to align library versions across multiple applications. Keeping in mind that import maps are a thing of the future, there are different strategies we can apply when mapping assets. Depending on the strategy choosen, the workflow will be a little bit different.","sidebar":"mainSidebar"},"server":{"id":"server","title":"Server","description":"The Eik server is a node.js application distributed as the @eik/service NPM package. It aims to be runnable as a service out of the box but still be flexible and customizable enough to suite a wide range of infrastructures needs.","sidebar":"mainSidebar"},"server_api":{"id":"server_api","title":"Eik server - Programatic API","description":"The Eik service is distributed as a Fastify plugin and has the following programatic API:","sidebar":"mainSidebar"},"server_file_structure":{"id":"server_file_structure","title":"Eik server - File structure","description":"The EIK server stores files in the following structure:","sidebar":"mainSidebar"},"server_metrics":{"id":"server_metrics","title":"Eik server - Metrics","description":"The Eik server exposes a metric stream which emits internal metrics","sidebar":"mainSidebar"},"server_rest_api":{"id":"server_rest_api","title":"Eik server - REST API","description":"The EIK server has the following REST API:","sidebar":"mainSidebar"},"server_sink":{"id":"server_sink","title":"Eik server - Sink","description":"The Eik server has a file sink concept which caters for the posibillity to write files to, and read files from different storage backends by swapping out sink modules in the server. Because each sink implements the same public API, it is possible to use one sink in one environment and a different sink in another.","sidebar":"mainSidebar"},"travis":{"id":"travis","title":"Travis","description":"Publishing to an Eik server from a Travis CI build can be achieved with a few commands.","sidebar":"mainSidebar"}}}')}}]);